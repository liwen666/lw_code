<?xml version="1.0" encoding="UTF-8"?>
<INSTALL_SQL>
  <PACKAGE>
    <SQL>
      <OBJECT_NAME>GLOBAL_MULTYEAR_CZ</OBJECT_NAME>
      <SQL_COMMENT>初始化用全局包</SQL_COMMENT>
      <SQL_CONTENT><![CDATA[CREATE OR REPLACE PACKAGE GLOBAL_MULTYEAR_CZ is
  v_pmYear  varchar2(32) :='#DEFAULT_YEAR#';
  v_pmDivID varchar2(32) := '#DEFAULT_PROVINCE#';
  v_userID  varchar2(32);
  v_pmYA varchar2(32);
  v_ACCTSYSTYPEID varchar2(128);
  V_TASKID VARCHAR2(32);
  ---全局函数
  function Secu_f_Global_Setparm(v_Userida varchar2,v_pmDIvida varchar2,v_pmYeara varchar2,v_pmYAa varchar2 default null)  RETURN varchar2;
  function Secu_f_Global_Parm(v_parm varchar2) RETURN varchar2;
  FUNCTION F_SET_TASKID(P_TASKID VARCHAR2) RETURN VARCHAR2;
end GLOBAL_MULTYear_CZ;]]></SQL_CONTENT>
    </SQL>
    <SQL>
      <OBJECT_NAME>PKG_CONSTANTS</OBJECT_NAME>
      <SQL_COMMENT>全局常量包</SQL_COMMENT>
      <SQL_CONTENT><![CDATA[CREATE OR REPLACE PACKAGE PKG_CONSTANTS IS
    DEFAULT_PROVINCE CONSTANT VARCHAR2(32) := '#DEFAULT_PROVINCE#';
    FUNCTION GETDEFAULTPROVINCE RETURN VARCHAR2;
END PKG_CONSTANTS;]]></SQL_CONTENT>
    </SQL>
  </PACKAGE>
  <PACKAGE_BODY>
    <SQL>
      <OBJECT_NAME>GLOBAL_MULTYEAR_CZ</OBJECT_NAME>
      <SQL_COMMENT>初始化用全局包函数</SQL_COMMENT>
      <SQL_CONTENT><![CDATA[CREATE OR REPLACE PACKAGE BODY GLOBAL_MULTYEAR_CZ as
      ---全局函数
      function Secu_f_GLOBAL_SetPARM(v_userida varchar2,v_pmDIvida varchar2,v_pmYeara varchar2,v_pmYAa varchar2 default null)  Return varchar2 is
      begin
        v_userID:=v_userida;
        v_pmDivID:=v_pmDIvida;
        v_pmYear:=v_pmYeara;
        v_pmYA:=v_pmYAa;
        return '1';
      end Secu_f_GLOBAL_SetPARM;

      function Secu_f_GLOBAL_PARM(v_parm varchar2) Return varchar2 is
      begin
        if v_parm='DIVID' then
           return v_pmDivID;
        end if;
        if v_parm='YEAR' then
           return v_pmYear;
        end if;
        if v_parm='USER' then
           return v_UserID;
        end if;
        if v_parm = 'YEARPROVINCE' then
          return v_pmYA;
        end if;
        if v_parm = 'TASKID' then
          RETURN V_TASKID;
        end if;
        return '1';
      end Secu_f_GLOBAL_PARM;

      function secu_f_global_setacctsystype(v_acctsystype varchar2) return varchar2 is
      begin
        v_ACCTSYSTYPEID := v_acctsystype;
        return '1';
      end secu_f_global_setacctsystype;

      function secu_f_global_getacctsystype(v_parm varchar2) return varchar2 is
      begin
        if v_parm = 'ACCTSYSTYPEID' then
          return v_ACCTSYSTYPEID;
        end if;
        return '1';
      end secu_f_global_getacctsystype;
      
      FUNCTION F_SET_TASKID(P_TASKID VARCHAR2) RETURN VARCHAR2 IS
        BEGIN
          V_TASKID := P_TASKID;
          RETURN '1';
        END F_SET_TASKID;
        
end Global_MultYear_CZ;]]></SQL_CONTENT>
    </SQL>
    <SQL>
      <OBJECT_NAME>PKG_CONSTANTS</OBJECT_NAME>
      <SQL_COMMENT>全局常量包体</SQL_COMMENT>
      <SQL_CONTENT><![CDATA[CREATE OR REPLACE PACKAGE BODY PKG_CONSTANTS IS
  FUNCTION GETDEFAULTPROVINCE RETURN VARCHAR2 IS
  BEGIN
    RETURN DEFAULT_PROVINCE;
  END;
BEGIN
  RETURN;
END PKG_CONSTANTS;]]></SQL_CONTENT>
    </SQL>
  </PACKAGE_BODY>
  <TABLE>
     <SQL>
           <OBJECT_NAME>P#SPF_T_AGENCY</OBJECT_NAME>
           <SQL_COMMENT>项目库扩展单位表(企业、个人)</SQL_COMMENT>
           <SQL_CONTENT><![CDATA[BEGIN
         EXECUTE IMMEDIATE Q'{CREATE TABLE P#SPF_T_AGENCY 
        (	YEAR CHAR(4) NOT NULL ENABLE, 
     	PROVINCE VARCHAR2(9) NOT NULL ENABLE, 
     	GUID VARCHAR2(32) DEFAULT SYS_GUID() NOT NULL ENABLE, 
     	CODE VARCHAR2(200) NOT NULL ENABLE, 
     	NAME VARCHAR2(255), 
     	SUPERGUID VARCHAR2(32) DEFAULT 'B21170C491854236BAFEDB4D75111683' NOT NULL ENABLE, 
     	ISLEAF CHAR(1) DEFAULT '1' NOT NULL ENABLE, 
     	LEVELNO NUMBER(1,0) DEFAULT 3, 
     	ALIAS VARCHAR2(100), 
     	PINYIN VARCHAR2(20), 
     	REMARK VARCHAR2(500), 
     	CREATEDATE VARCHAR2(10), 
     	STARTDATE VARCHAR2(10), 
     	ENDDATE VARCHAR2(10), 
     	SRCGUID VARCHAR2(32), 
     	DESGUID VARCHAR2(32), 
     	STATUS CHAR(1) DEFAULT 1 NOT NULL ENABLE, 
     	DBVERSION TIMESTAMP (6) DEFAULT SYSDATE, 
     	DIVTYPE VARCHAR2(32), 
     	FUNDSUP VARCHAR2(32), 
     	ADMINLVL VARCHAR2(32), 
     	ADDR VARCHAR2(255), 
     	POSTCODE VARCHAR2(6), 
     	TEL VARCHAR2(40), 
     	FAX VARCHAR2(30), 
     	LINKNAME VARCHAR2(20), 
     	DIVOFFICER VARCHAR2(20), 
     	FINOFFICER VARCHAR2(20), 
     	ORGCODE VARCHAR2(32), 
     	ISITSELF CHAR(1), 
     	ISPAYDIV CHAR(1), 
     	ISFISC CHAR(1), 
     	ISEXP CHAR(1), 
     	ISEXEC CHAR(1), 
     	ISSALDIV CHAR(1), 
     	ISASS CHAR(1), 
     	ISSELF CHAR(1), 
     	ISDISTRICT CHAR(1) DEFAULT '0', 
     	DISTRICTID VARCHAR2(32), 
     	SRCSCALE NUMBER(24,6), 
     	 CONSTRAINT PK_P#SPF_T_AGENCY PRIMARY KEY (PROVINCE, YEAR, STATUS, GUID) ENABLE
        ) 
       PARTITION BY LIST (PROVINCE)
     SUBPARTITION BY LIST (YEAR)
     (
       PARTITION P87 VALUES ('87')
       (
         SUBPARTITION P87_Y2016 VALUES ('2016')
       )
     )}';
     END;]]></SQL_CONTENT>
    </SQL>
  </TABLE>
  <VIEW>
      <SQL>
        <OBJECT_NAME>SPF_T_AGENCY</OBJECT_NAME>
        <SQL_COMMENT>项目库单位扩展单位表视图</SQL_COMMENT>
        <SQL_CONTENT><![CDATA[BEGIN
      EXECUTE IMMEDIATE Q'{CREATE OR REPLACE FORCE VIEW SPF_T_AGENCY AS 
    SELECT ADDR,ADMINLVL,ALIAS,CODE,CREATEDATE,DBVERSION,DESGUID,DISTRICTID,DIVOFFICER,DIVTYPE,ENDDATE,FAX,FINOFFICER,FUNDSUP,GUID,ISASS,ISDISTRICT,ISEXEC,ISEXP,ISFISC,ISITSELF,ISLEAF,ISPAYDIV,ISSALDIV,ISSELF,LEVELNO,LINKNAME,NAME,ORGCODE,PINYIN,POSTCODE,REMARK,SRCGUID,SRCSCALE,STARTDATE,STATUS,SUPERGUID,TEL
  FROM P#SPF_T_AGENCY
  WHERE PROVINCE=GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID') AND YEAR=GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('YEAR') AND STATUS='1'}';
  END;]]></SQL_CONTENT>
    </SQL>
  </VIEW>
  <MV>
      <SQL>
        <OBJECT_NAME>CODE_M_DISTRICT</OBJECT_NAME>
        <SQL_COMMENT>地区物化视图</SQL_COMMENT>
        <SQL_CONTENT><![CDATA[BEGIN
  EXECUTE IMMEDIATE Q'{CREATE MATERIALIZED VIEW CODE_M_DISTRICT
REFRESH FORCE ON DEMAND
AS
WITH TD AS(SELECT YEAR,
       PROVINCE,
       GUID,
       CODE,
       NAME,
       CASE WHEN CODE = SUBSTR(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID'),1,LENGTH(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID')) - 2) THEN '0' ELSE SUPERGUID END SUPERGUID,
       ISLEAF,
       (LEVELNO - 1) LEVELNO,
       '' ALIAS,
       '' PINYIN,
       '' REMARK,
       '' CREATEDATE,
       '' STARTDATE,
       '' ENDDATE,
       '' SRCGUID,
       '' DESGUID,
       0 SRCSCALE,
       STATUS,
       DBVERSION,
       '' EMW,
       CASE
         WHEN SUBSTR(CODE, -2, 2) = '00' THEN
          LEVELNO
         ELSE
          LEVELNO + 1
       END BGTLEVEL,
       CODE STDCODE,
       CASE
         WHEN SUBSTR(CODE, -2, 2) = '00' THEN
          LEVELNO - 1
         ELSE
          (LEVELNO + 1) - 1
       END DISTRLVL,
       ISSTRAIGHTCOUNTY ZGXIAN
  FROM FASP_T_PUBPROVINCE
  WHERE CODE LIKE SUBSTR(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID'),1,LENGTH(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID')) - 2)||'%' AND STATUS = '1')
SELECT T.YEAR,
        T.PROVINCE,
        T.GUID,
        T.CODE,
        T.NAME,
        T.SUPERGUID,
        T.ISLEAF,
        T.LEVELNO,
        DISTRLVL,
        CASE T.DISTRLVL
          WHEN 2 THEN CASE WHEN SUBSTR(CODE,-2,2) = '00' THEN (SELECT '['||A.CODE||']'||A.NAME FROM TD A WHERE A.YEAR = T.YEAR AND A.GUID=T.SUPERGUID) ELSE (SELECT '['||A.CODE||']'||A.NAME  FROM TD A WHERE A.YEAR = T.YEAR AND A.GUID=T.GUID) END
          WHEN 3 THEN CASE WHEN SUBSTR(CODE,-2,2) = '00' THEN (SELECT '['||A.CODE||']'||A.NAME FROM TD A WHERE A.YEAR = T.YEAR AND A.GUID= (SELECT SUPERGUID FROM TD WHERE YEAR = T.YEAR AND GUID = T.SUPERGUID)) ELSE (SELECT '['||A.CODE||']'||A.NAME FROM TD A WHERE A.YEAR = T.YEAR AND A.GUID=T.SUPERGUID) END
          WHEN 4 THEN (SELECT '['||A.CODE||']'||A.NAME FROM TD A WHERE A.YEAR = T.YEAR AND A.GUID=(SELECT B.SUPERGUID FROM TD B WHERE B.YEAR = T.YEAR AND B.GUID=T.SUPERGUID))
        END     PROVINCE_SH ,
        CASE T.DISTRLVL
          WHEN 2 THEN  CASE WHEN SUBSTR(CODE,-2,2) = '00' THEN  '['||T.CODE||']'||T.NAME ELSE '' END
          WHEN 3 THEN CASE WHEN SUBSTR(CODE,-2,2) = '00' THEN (SELECT '['||A.CODE||']'||A.NAME FROM TD A WHERE A.YEAR = T.YEAR AND A.GUID=T.SUPERGUID) ELSE '['||T.CODE||']'||T.NAME END
          WHEN 4 THEN (SELECT '['||A.CODE||']'||A.NAME FROM TD A WHERE A.YEAR = T.YEAR AND A.GUID=T.SUPERGUID)
        END  CITY ,
        CASE T.DISTRLVL
          WHEN 2 THEN  ''
          WHEN 3 THEN CASE WHEN SUBSTR(CODE,-2,2) = '00' THEN '['||T.CODE||']'||T.NAME ELSE '' END
          WHEN 4 THEN '['||T.CODE||']'||T.NAME
        END   COUNTY,
        CASE T.DISTRLVL
          WHEN 2 THEN CASE WHEN SUBSTR(CODE,-2,2) = '00' THEN T.SUPERGUID ELSE T.GUID END
          WHEN 3 THEN CASE WHEN SUBSTR(CODE,-2,2) = '00' THEN (SELECT SUPERGUID FROM TD WHERE YEAR = T.YEAR AND GUID = T.SUPERGUID) ELSE T.SUPERGUID END
          WHEN 4 THEN T.SUPERGUID
        END     PROVINCE_SHID ,
         CASE T.DISTRLVL
          WHEN 2 THEN   CASE WHEN SUBSTR(CODE,-2,2) = '00' THEN  T.GUID ELSE '' END
          WHEN 3 THEN CASE WHEN SUBSTR(CODE,-2,2) = '00' THEN T.SUPERGUID ELSE GUID END
          WHEN 4 THEN T.SUPERGUID
        END  CITYID ,
        CASE T.DISTRLVL
          WHEN 2 THEN  ''
          WHEN 3 THEN CASE WHEN SUBSTR(CODE,-2,2) = '00' THEN T.GUID ELSE '' END
          WHEN 4 THEN T.GUID
        END   COUNTYID,
        BGTLEVEL,
        STDCODE,
        0 SRCSCALE,
        STATUS,
        DBVERSION,
        ZGXIAN,
        CASE WHEN SUBSTR(CODE, -2, 2) = '00' THEN '1' ELSE  '0' END ISSELF
  FROM TD T}';
  EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX IX_CODE_M_DISTRICT ON CODE_M_DISTRICT (YEAR, GUID)';
  EXECUTE IMMEDIATE 'CREATE INDEX I_CODE_M_DISTRICT_1 ON CODE_M_DISTRICT (PROVINCE, YEAR, LEVELNO, CODE, GUID)';
  EXECUTE IMMEDIATE 'CREATE INDEX I_CODE_M_DISTRICT_2 ON CODE_M_DISTRICT (PROVINCE, YEAR, SUPERGUID, ISLEAF, GUID)';
END;]]></SQL_CONTENT>
      </SQL>
      <SQL>
              <OBJECT_NAME>CODE_M_DEPARTMENT</OBJECT_NAME>
              <SQL_COMMENT>部门物化视图</SQL_COMMENT>
              <SQL_CONTENT><![CDATA[
BEGIN
  EXECUTE IMMEDIATE Q'{CREATE MATERIALIZED VIEW CODE_M_DEPARTMENT
REFRESH FORCE ON DEMAND
AS
SELECT A.GUID,
       A.NAME,
       A.CODE,
       A.ISLEAF,
       A.SUPERGUID,
       A.DISTRICTID,
       A.DISTRICTNAME,
       A.ISCZ,
       A.DIVTYPE,
       A.ISTFDIV,
       A.PROVINCE,
       A.YEAR,
       A.LEVELNO
  FROM (SELECT X.GUID,
               '[' || X.CODE || ']' || X.NAME AS NAME,
               X.CODE,
               Y.GUID SUPERGUID,
               X.ISLEAF,
               Y.GUID DISTRICTID,
               '[' || Y.CODE || ']' || Y.NAME AS DISTRICTNAME,
               '0' AS ISCZ,
               '0' DIVTYPE,
               '0' ISTFDIV,
               X.PROVINCE,
               X.YEAR,
               X.LEVELNO
          FROM P#FASP_T_PUBAGENCY X, FASP_T_PUBPROVINCE Y
         WHERE X.YEAR = Y.YEAR  AND X.PROVINCE = Y.CODE  AND X.STATUS = '1'AND X.SUPERGUID = '0'
        UNION ALL
        SELECT T.GUID,
               T.NAME AS NAME,
               T.CODE,
               T.DISTRICTID AS SUPERGUID,
               1 AS ISLEAF,
               T.DISTRICTID,
               '[' || B.CODE || ']' || B.NAME AS DISTRICTNAME,
               '1' AS ISCZ,
               '0' AS DIVTYPE,
               '' AS ISTFDIV,
               T.PROVINCE,
               T.YEAR,
               T.LEVELNO
          FROM (SELECT X.GUID,
       X.CODE,
       '[' || X.CODE || ']' || X.NAME AS NAME,
       X.SUPERGUID,
       X.ISLEAF,
       X.LEVELNO,
       X.PROVINCE, X.YEAR,
       X.STATUS,
       Y.GUID AS DISTRICTID
  FROM P#FASP_T_PUBDEPARTMENT X,FASP_T_PUBPROVINCE Y
 WHERE X.YEAR = Y.YEAR AND X.PROVINCE = Y.CODE AND X.STATUS = '1') T, FASP_T_PUBPROVINCE B
         WHERE T.YEAR = B.YEAR AND T.DISTRICTID = B.GUID
         ) A}';
  EXECUTE IMMEDIATE Q'{CREATE UNIQUE INDEX IX_CODE_M_DEPARTMENT ON CODE_M_DEPARTMENT(DISTRICTID,YEAR,GUID)}';
END;]]></SQL_CONTENT>
      </SQL>
       <SQL>
                    <OBJECT_NAME>CODE_M_AGENCY</OBJECT_NAME>
                    <SQL_COMMENT>单位物化视图</SQL_COMMENT>
                    <SQL_CONTENT><![CDATA[
      BEGIN
  EXECUTE IMMEDIATE Q'{CREATE MATERIALIZED VIEW CODE_M_AGENCY
USING NO INDEX
REFRESH FORCE ON DEMAND
AS
SELECT X.YEAR,
       X.PROVINCE,
       X.GUID,
       X.CODE CODE,
       X.NAME,
       X.LEVELNO + (Y.LEVELNO - 1) LEVELNO,
       X.ISLEAF,
       X.AGENCYTYPE,
       X.ORGCODE,
       X.AGENCYLEVEL,
       CASE WHEN X.SUPERGUID = '0' THEN Y.GUID ELSE X.SUPERGUID END SUPERGUID,
       X.VERSION,
       X.STATUS,
       X.DBVERSION,
       '0' ISDISTRICT,
       '0' DIVTYPE,
       Y.GUID DISTRICTID,
       Y.NAME DISTRICTNAME,
       Y.CODE DISTRICTCODE,
       Y.FINADMLEVEL DISTRICTLVL,
       1 QMARK
  FROM P#FASP_T_PUBAGENCY X, FASP_T_PUBPROVINCE Y
 WHERE X.YEAR = Y.YEAR
   AND X.PROVINCE = Y.CODE
   AND (Y.CODE LIKE SUBSTR(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID'),1,LENGTH(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID')) - 2)||'%')
UNION ALL
SELECT YEAR,
       CODE PROVINCE,
       GUID,
       CODE,
       NAME,
       LEVELNO - 1 LEVELNO,
       0 ISLEAF,
       '3377C3262A234BB2819ED8AE1E672108' AGENCYTYPE,
       '2FA679EE73D44EDEA83F10A1266EF4C8' ORG,
       '114093A69B644ACEABA0766E6A6B70BD' AGENCYLEVEL,
       CASE WHEN (LEVELNO - 1) = 1 THEN '0' ELSE SUPERGUID END SUPERGUID,
       VERSION,
       STATUS,
       DBVERSION,
       '1' ISDISTRICT,
       '0' DIVTYPE,
       GUID DISTRICTID,
       NAME DISTRICTNAME,
       CODE DISTRICTCODE,
       FINADMLEVEL DISTRICTLVL,
       2 QMARK
  FROM FASP_T_PUBPROVINCE
 WHERE (CODE LIKE SUBSTR(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID'),1,LENGTH(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID')) - 2)||'%')}';
  EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX IX_CODE_M_AGENCY ON CODE_M_AGENCY (YEAR, GUID)';
  EXECUTE IMMEDIATE 'CREATE INDEX I_CODE_M_AGENCY_1 ON CODE_M_AGENCY (PROVINCE, YEAR, LEVELNO, CODE, GUID)';
  EXECUTE IMMEDIATE 'CREATE INDEX I_CODE_M_AGENCY_2 ON CODE_M_AGENCY (PROVINCE, YEAR, SUPERGUID, ISLEAF, GUID)';
END;]]></SQL_CONTENT>
      </SQL>
      <SQL>
                          <OBJECT_NAME>CODE_M_AGENCY_SPF</OBJECT_NAME>
                          <SQL_COMMENT>单位物化视图(项目库)</SQL_COMMENT>
                          <SQL_CONTENT><![CDATA[
            DECLARE
  V_SQL VARCHAR2(32000);
BEGIN
  V_SQL := Q'{CREATE MATERIALIZED VIEW CODE_M_AGENCY_SPF
USING NO INDEX
REFRESH FORCE ON DEMAND
AS
SELECT X.YEAR,
       X.PROVINCE,
       X.GUID,
       X.CODE,
       X.NAME,
       X.LEVELNO + (Y.LEVELNO - 1) LEVELNO,
       X.ISLEAF,
       CASE WHEN X.SUPERGUID = '0' THEN Y.GUID ELSE X.SUPERGUID END SUPERGUID,
       '0' ISDISTRICT,
       '0' DIVTYPE,
       Y.GUID DISTRICTID,
       Y.NAME DISTRICTNAME,
       Y.CODE DISTRICTCODE,
       Y.FINADMLEVEL DISTRICTLVL,
       X.AGENCYTYPE,
       1 QMARK
  FROM P#FASP_T_PUBAGENCY X, FASP_T_PUBPROVINCE Y
 WHERE X.YEAR = Y.YEAR  AND X.PROVINCE = Y.CODE 
 AND Y.CODE LIKE SUBSTR(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID'),1,LENGTH(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID')) - 2)||'%' 
 AND X.STATUS = '1'
UNION
SELECT YEAR,
       CODE PROVINCE,
       GUID,
       CODE,
       NAME,
       LEVELNO - 1 LEVELNO,
       0 ISLEAF,
       CASE WHEN (LEVELNO - 1) = 1 THEN '0' ELSE SUPERGUID END SUPERGUID,
       '1' ISDISTRICT,
       '0' DIVTYPE,
       GUID DISTRICTID,
       NAME DISTRICTNAME,
       CODE DISTRICTCODE,
       FINADMLEVEL DISTRICTLVL,
       '' AGENCYTYPE,
       2 QMARK
  FROM FASP_T_PUBPROVINCE
 WHERE CODE LIKE SUBSTR(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID'),1,LENGTH(GLOBAL_MULTYEAR_CZ.SECU_F_GLOBAL_PARM('DIVID')) - 2)||'%' 
 AND STATUS = '1'
UNION ALL
SELECT X.YEAR,
       X.PROVINCE,
       X.GUID,
       X.CODE,
       X.NAME,
       Y.LEVELNO,
       1 ISLEAF,
       X.DISTRICTID SUPERGUID,
       '0' ISDISTRICT,
       X.DIVTYPE,
       X.DISTRICTID,
       Y.CODE DISTRICTCODE,
       Y.NAME DISTRICTNAME,
       Y.FINADMLEVEL DISTRICTLVL,
       '' AGENCYTYPE,
       3 QMARK
  FROM P#SPF_T_AGENCY X, FASP_T_PUBPROVINCE Y
 WHERE X.YEAR = Y.YEAR AND X.DISTRICTID = Y.GUID  AND X.STATUS = '1' AND Y.STATUS = '1'}';
  EXECUTE IMMEDIATE V_SQL;
  EXECUTE IMMEDIATE 'CREATE INDEX IX_CODE_M_AGENCY_SPF ON CODE_M_AGENCY_SPF (YEAR,GUID,PROVINCE)';
END;]]></SQL_CONTENT>
      </SQL>
      <SQL>
              <OBJECT_NAME>CODE_M_ACCTCODE_OUT_SPF</OBJECT_NAME>
              <SQL_COMMENT>一般预算支出物化视图</SQL_COMMENT>
              <SQL_CONTENT><![CDATA[
BEGIN
  EXECUTE IMMEDIATE Q'{CREATE MATERIALIZED VIEW CODE_M_ACCTCODE_OUT_SPF
REFRESH FORCE ON DEMAND
AS
WITH TCODE_T_ACCTITEM_SPF AS(
SELECT YEAR,STATUS,GUID,CODE,NAME,SUPERGUID,ISLEAF,LEVELNO,VERSION,DBVERSION,REMARK,CREATETIME,STARTTIME,ENDTIME,SRCGUID,DESGUID,SRCSCALE,ADMDIV,ALIAS,PINYIN,FUNCTYPE ACCTTYPEID
FROM FASP_T_PUBEXPFUNC WHERE (YEAR,GUID) IN (
SELECT X.YEAR,X.GUID
 FROM FASP_T_PUBEXPFUNC X,(
SELECT YEAR,CODE,GUID
FROM FASP_T_PUBEXPFUNC
WHERE  STATUS='1' AND FUNCTYPE = '01687QAtLGT46') y
WHERE X.YEAR = Y.YEAR AND Y.CODE LIKE X.CODE||'%'
AND X.STATUS = '1'))
SELECT YEAR,GUID,
       CODE,
       '['||CODE||']'||NAME NAME,
       A.SUPERGUID,
       ISLEAF,
       LEVELNO,
       STATUS,
       ' '  DISTRICTID,
       --BREVIARY,
       SUBSTR(A.CODE, 1, 3) AS LEI,
       CASE
         WHEN LENGTH(A.CODE) = 3 THEN
             A.NAME
         WHEN LENGTH(A.CODE) = 5 THEN
               (SELECT NAME
              FROM TCODE_T_ACCTITEM_SPF MM
             WHERE MM.YEAR = A.YEAR AND MM.GUID = A.SUPERGUID)
         ELSE
             (SELECT NN.NAME
              FROM TCODE_T_ACCTITEM_SPF MM ,TCODE_T_ACCTITEM_SPF NN
             WHERE MM.YEAR= A.YEAR AND MM.GUID = A.SUPERGUID
             AND NN.YEAR = MM.YEAR AND NN.GUID = MM.SUPERGUID)
        END AS LEINAME,
       SUBSTR(A.CODE, 4, 2) AS KUAN,
       SUBSTR(A.CODE, 1, 5) AS KUAN2,
       CASE
         WHEN LENGTH(A.CODE) = 5 OR LENGTH(A.CODE) = 3 THEN
             A.NAME
         WHEN LENGTH(A.CODE) = 7 THEN
               (SELECT NAME
              FROM TCODE_T_ACCTITEM_SPF MM
             WHERE MM.YEAR = A.YEAR AND MM.GUID = A.SUPERGUID)
        END AS KUANNAME,
       SUBSTR(A.CODE, 6, 2) AS XIANG,
       A.NAME AS XIANGNAME,
       --A.LEVELID AS LVLID,
      -- A.ACCTKINDID AS CLASSID,
       '[' || SUBSTR(A.CODE, 1, 3) || ']' ||(
       CASE
         WHEN LENGTH(A.CODE) = 3 THEN
             A.NAME
         WHEN LENGTH(A.CODE) = 5 THEN
               (SELECT NAME
              FROM TCODE_T_ACCTITEM_SPF MM
             WHERE MM.YEAR = A.YEAR AND MM.GUID = A.SUPERGUID)
         ELSE
             (SELECT NN.NAME
              FROM TCODE_T_ACCTITEM_SPF MM ,TCODE_T_ACCTITEM_SPF NN
             WHERE MM.YEAR = A.YEAR AND MM.GUID = A.SUPERGUID
             AND NN.YEAR = MM.YEAR AND NN.GUID = MM.SUPERGUID)
        END )  AS LEICODENAME,
       '[' || SUBSTR(A.CODE, 1, 5) || ']' || (
       CASE
         WHEN LENGTH(A.CODE) = 5 OR LENGTH(A.CODE) = 3 THEN
             A.NAME
         ELSE
               (SELECT NAME
              FROM TCODE_T_ACCTITEM_SPF MM
             WHERE MM.YEAR = A.YEAR AND MM.GUID = A.SUPERGUID)
        END  ) AS KUANCODENAME,
       '[' || SUBSTR(A.CODE, 1, 7) || ']' || A.NAME AS XIANGCODENAME,
       '[' || A.CODE || ']' || A.NAME AS GUIDNAME
  FROM TCODE_T_ACCTITEM_SPF A}';
  EXECUTE IMMEDIATE Q'{CREATE UNIQUE INDEX IX_CODE_M_ACCTCODE_OUT_SPF ON CODE_M_ACCTCODE_OUT_SPF (YEAR, GUID, CODE, SUPERGUID)}';
END;]]></SQL_CONTENT>
      </SQL>
  </MV>
</INSTALL_SQL>

