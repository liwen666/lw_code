<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:cache="http://www.springframework.org/schema/fasp2/cache"
	xmlns:distributed="http://www.springframework.org/schema/fasp2/distributed" 
	xmlns:communication="http://www.springframework.org/schema/fasp2/communication"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/fasp2/cache http://www.springframework.org/schema/fasp2/cache/cache.xsd
		http://www.springframework.org/schema/fasp2/distributed http://www.springframework.org/schema/fasp2/distributed/distributed.xsd
		http://www.springframework.org/schema/fasp2/communication http://www.springframework.org/schema/fasp2/communication/communication.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd"
	default-lazy-init="true" >

	<description>Spring-config</description>

	<!-- 使用annotation 自动注册bean, 注解自动装配  并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="mysql.connect">
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" /> -->
	</context:component-scan>
	

	<context:property-placeholder ignore-unresolvable="true" location="classpath*:/application.properties" />
	
	
	<!-- 事务管理 -->
	<bean id="transactionManagerBpmn" class="org.springframework.transaction.jta.JtaTransactionManager"/>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManagerBpmn" proxy-target-class="true" />
<!--  <bean id="dataSource_c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource"> -->
<!--         <property name="jdbcUrl" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl"/> -->
<!--         <property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/> -->
<!--         <property name="user" value="bpmnoa"/> -->
<!--         <property name="password" value="bpmnoa"/> -->
<!--         <property name="initialPoolSize" value="1"/> -->
<!--         <property name="minPoolSize" value="1"/> -->
<!--         <property name="maxPoolSize" value="10"/> -->
<!--         <property name="acquireIncrement" value="3"/> -->
<!--         <property name="maxStatements" value="8"/> -->
<!--         <property name="maxStatementsPerConnection" value="5"/> -->
<!--         <property name="maxIdleTime" value="1800"/> -->
<!--     </bean> -->
    <!--alibaba druid-->
    <bean id="dataSource_druid" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
<!--         基本属性 url、user、password -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://192.168.9.180:3306/hqbpmn?useUnicode=true"/>
        <property name="username" value="root"/>
        <property name="password" value="1987"/>

<!--         配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10"/>
        <property name="minIdle" value="10"/>
        <property name="maxActive" value="50"/>

<!--         配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
<!--         配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

<!--         配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

<!--         打开PSCache，并且指定每个连接上PSCache的大小  如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。 -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

<!--         配置监控统计拦截的filters -->
        <property name="filters" value="wall,stat"/>
    </bean>
	
	<!-- JDBC模版配置 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource_druid" />
		</property>
	</bean>

    
   
	
	<bean id="applicationContextUtil" class="util.ApplicationContextUtil" lazy-init="false"></bean>
<!-- 	mybatis配置 -->
	<import resource="classpath:mysql/connect/mybatis_config.xml"/>
    <!-- 自动扫描，多个包以 逗号分隔 -->  
    <context:annotation-config />  <!--组件自动扫描-->  
</beans>